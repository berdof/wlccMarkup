
$sprites: sprite-map("sprite/*.png", $position: 0%, $spacing: 25px, $repeat: no-repeat, $readonly-spacing: 10px);
//$sprites-retina: sprite-map("sprite-retina/*.png", $position: 0%, $spacing: 25px, $repeat: no-repeat, $readonly-spacing: 10px);


@mixin sprite-background($name, $dimensions: true) {
  background-image: sprite-url($sprites);
  background-position: sprite-position($sprites, $name);
  background-repeat: no-repeat;
  @if $dimensions == true{
    height: image-height(sprite-file($sprites, $name));
    width: image-width(sprite-file($sprites, $name));
    display: block;
  }
//  @media (-webkit-min-device-pixel-ratio: 2), (-o-min-device-pixel-ratio: 3/2), (min-device-pixel-ratio: 2) {
//  // Workaround for https://gist.github.com/2140082
//    @if (sprite-position($sprites, $name) != sprite-position($sprites-retina, $name)) {
//      $ypos: round(nth(sprite-position($sprites-retina, $name), 2) / 2);
//      background-position: 0 $ypos;
//    }
//  // Hard coded width of the normal sprite image. There must be a smarter way to do this.
//    @include background-size(442px auto);
//    background-image: sprite-url($sprites-retina);
//  }
}

@function sprite-width($name, $smap: $sprites) {
  @return image-width(sprite-file($smap, $name));
}

@function sprite-height($name, $smap: $sprites) {
  @return image-height(sprite-file($smap, $name));
}