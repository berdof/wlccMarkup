{"mtime":1379501304,"js":"(function() {\n  var CareTribe;\n\n  CareTribe = (function() {\n    CareTribe.prototype.pagesCoords = [826, 1390, 2132, 2766, 3600, 4348, 5179];\n\n    CareTribe.prototype.errorClass = \"error\";\n\n    CareTribe.prototype.eventHandlers = {\n      hrefClick: function(e) {\n        var $root, href;\n\n        href = $(this).attr(\"href\");\n        $root = $('html, body');\n        if (href[0] === \"#\") {\n          $root.animate({\n            scrollTop: $(href).offset().top\n          }, this.scrollSpeed);\n          e.preventDefault();\n          return false;\n        }\n      },\n      formSubmitClick: function(e) {\n        var form, isValid, self;\n\n        self = e.data.self;\n        form = $(this).closest(\"form\");\n        isValid = self.validate(form);\n        if (isValid) {\n          self.sendDataAsync(form).done(function(data) {\n            form.find(\".form__success\").fadeIn(350);\n          });\n        }\n        return false;\n      },\n      hidePopupClick: function(e) {\n        $(\".modal, .modal-overlay\").fadeOut();\n      },\n      showPopupClick: function(e) {\n        var selector;\n\n        selector = $(this).data(\"modalShow\");\n        $(\"\" + selector + \", .modal-overlay\").fadeIn();\n      }\n    };\n\n    CareTribe.prototype.attachEvents = function() {\n      var self;\n\n      self = this;\n      $(\"a\").on('click', {\n        self: self\n      }, self.eventHandlers.hrefClick);\n      $(\".form input[type=submit]\").on('click', {\n        self: self\n      }, self.eventHandlers.formSubmitClick);\n      $(\".modal-overlay, .modal__close\").on('click', {\n        self: self\n      }, self.eventHandlers.hidePopupClick);\n      $(\"[data-modal-show]\").on('click', {\n        self: self\n      }, self.eventHandlers.showPopupClick);\n    };\n\n    CareTribe.prototype.validate = function(form) {\n      var hasErrors, inputs, self, validateGeneral, validateOnEmail, validateOnEmpty, validateOnPhone;\n\n      hasErrors = 0;\n      inputs = form.find(\"[data-validate]\");\n      self = this;\n      validateGeneral = function(input, flag) {\n        if (flag) {\n          input[\"removeClass\"](self.errorClass);\n        } else {\n          hasErrors++;\n          input[\"addClass\"](self.errorClass);\n        }\n      };\n      validateOnEmpty = function(input) {\n        var inputLength, length;\n\n        length = 2;\n        inputLength = input.val().length;\n        validateGeneral(input, inputLength >= length);\n      };\n      validateOnEmail = function(input) {\n        var res;\n\n        res = /^([a-zA-Z0-9+_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n        validateGeneral(input, res.test(input.val()));\n      };\n      validateOnPhone = function(input) {\n        var regex;\n\n        regex = /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/;\n        validateGeneral(input, regex.test(input.val()));\n      };\n      inputs.each(function(i, el) {\n        var $el;\n\n        $el = $(el);\n        switch ($el.attr(\"data-validate\")) {\n          case \"empty\":\n            validateOnEmpty($el);\n            break;\n          case \"email\":\n            validateOnEmail($el);\n            break;\n          case \"tel\":\n            validateOnPhone($el);\n            break;\n          default:\n            validateOnEmpty($el);\n        }\n      });\n      return hasErrors === 0;\n    };\n\n    /*\n    * ajax sending form data\n    * @param form - form that needs to send, action attr needed\n    */\n\n\n    CareTribe.prototype.sendDataAsync = function(form, dataType, showStatusText, actionButton) {\n      var data, originText, self, submit, url;\n\n      if (dataType == null) {\n        dataType = \"text\";\n      }\n      if (showStatusText == null) {\n        showStatusText = \"Sending ...\";\n      }\n      if (actionButton == null) {\n        actionButton = \"input[type=submit]\";\n      }\n      data = form.serialize();\n      url = form.attr(\"action\");\n      submit = form.find(actionButton);\n      originText = submit.val();\n      submit.val(showStatusText);\n      self = this;\n      return $.ajax({\n        \"type\": \"get\",\n        \"url\": url,\n        \"data\": data,\n        \"dataType\": dataType,\n        success: function(response) {\n          submit.val(originText);\n        },\n        error: function(err) {\n          console.log(err);\n          submit.val(originText);\n        }\n      });\n    };\n\n    CareTribe.prototype.initCoords = function() {\n      var offsetTop, self, wH;\n\n      self = this;\n      wH = $(window).height();\n      offsetTop = wH / 3;\n      $(\".page\").each(function(i, el) {\n        self.pagesCoords[i] = Math.floor($(el).offset().top) - (i === 0 ? 0 : offsetTop);\n      });\n    };\n\n    CareTribe.prototype.initCarousel = function() {\n      $(\".slider__container\").jCarouselLite({\n        visible: 3,\n        start: 0,\n        scroll: 1,\n        btnNext: \".slider__next\",\n        btnPrev: \".slider__prev\",\n        btnGo: $(\".slider__pager li\")\n      });\n    };\n\n    CareTribe.prototype.initTelMask = function() {\n      $(\".tel-input\").mask(\"(999) 999-9999\");\n    };\n\n    CareTribe.prototype.replaceImagesToRetina = function() {\n      var dpr;\n\n      if (window.devicePixelRatio !== void 0) {\n        dpr = window.devicePixelRatio;\n        if (dpr === 2) {\n          $(\"[data-src-retina]\").each(function(i, el) {\n            var img, src;\n\n            img = $(el);\n            src = img.data(\"srcRetina\");\n            img.attr(\"src\", src);\n          });\n        }\n      }\n    };\n\n    CareTribe.prototype.initMap = function() {\n      var map, mapEl, mapLatLng, mapOptions, marker, markerLatLng;\n\n      markerLatLng = new google.maps.LatLng(30.269622, -97.742325);\n      mapLatLng = new google.maps.LatLng(30.269622, -97.732325);\n      mapEl = document.getElementById('map-canvas');\n      if (mapEl !== null) {\n        mapOptions = {\n          zoom: 15,\n          center: mapLatLng,\n          disableDefaultUI: true,\n          zoomControl: false,\n          scaleControl: false,\n          scrollwheel: false,\n          disableDoubleClickZoom: true,\n          mapTypeId: google.maps.MapTypeId.ROADMAP\n        };\n        map = new google.maps.Map(mapEl, mapOptions);\n        marker = new google.maps.Marker({\n          position: markerLatLng,\n          map: map,\n          icon: \"images/marker.png\"\n        });\n      }\n    };\n\n    CareTribe.prototype.initPlaceholder = function() {\n      if (!Modernizr.input.placeholder) {\n        $(\"[placeholder]\").focus(function() {\n          var input;\n\n          input = $(this);\n          if (input.val() === input.attr(\"placeholder\")) {\n            input.val(\"\");\n            return input.removeClass(\"placeholder\");\n          }\n        }).blur(function() {\n          var input;\n\n          input = $(this);\n          if (input.val() === \"\" || input.val() === input.attr(\"placeholder\")) {\n            input.addClass(\"placeholder\");\n            return input.val(input.attr(\"placeholder\"));\n          }\n        }).blur();\n        $(\"[placeholder]\").parents(\"form\").submit(function() {\n          return $(this).find(\"[placeholder]\").each(function() {\n            var input;\n\n            input = $(this);\n            if (input.val() === input.attr(\"placeholder\")) {\n              return input.val(\"\");\n            }\n          });\n        });\n      }\n    };\n\n    function CareTribe() {\n      var self;\n\n      self = this;\n      self.initCarousel();\n      self.attachEvents();\n      self.initCoords();\n      self.initTelMask();\n      self.replaceImagesToRetina();\n      self.initPlaceholder();\n    }\n\n    return CareTribe;\n\n  })();\n\n  $(document).ready(function() {\n    $.fn.NewSite = new NewSite;\n  });\n\n}).call(this);\n"}